{"remainingRequest":"C:\\Users\\USER\\Desktop\\Work\\Lead Finder\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\USER\\Desktop\\Work\\Lead Finder\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\USER\\Desktop\\Work\\Lead Finder\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\Work\\Lead Finder\\src\\views\\app\\pages\\account.vue?vue&type=template&id=8e06fa6c&scoped=true&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\Work\\Lead Finder\\src\\views\\app\\pages\\account.vue","mtime":1699718435243},{"path":"C:\\Users\\USER\\Desktop\\Work\\Lead Finder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698119674769},{"path":"C:\\Users\\USER\\Desktop\\Work\\Lead Finder\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1698120141537},{"path":"C:\\Users\\USER\\Desktop\\Work\\Lead Finder\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1698119674769},{"path":"C:\\Users\\USER\\Desktop\\Work\\Lead Finder\\node_modules\\vue-loader\\lib\\index.js","mtime":1698120141175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}